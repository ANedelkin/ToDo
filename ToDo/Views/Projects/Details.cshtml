@using System.Security.Claims
@using ToDo.Core.Contracts
@using ToDo.Core.Models.ViewModels
@using ToDo.Constants.Enums
@using ToDo.Core.Services
@model ProjectDetailsVM

@{
    ViewData["Title"] = Model.Id == string.Empty?"Create Project":"Edit Project";
}

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script src="~/js/details.js"></script>
}


<div class="client-area">
    @if (Model.Id != string.Empty)
    {
        <partial name="ProjectSidebar" model='new ProjectSidebarVM(Model.Title, (int)ProjectSidebarTabs.Details, Model.Id!)'></partial>
    }

    <div class="main-part">
        <div class="container">
            <h1 class="title">@(Model.Id==string.Empty?"Create":"Edit") Project</h1>
            <form asp-action="@(Model.Id==string.Empty?"Create":"Update")" asp-controller="Projects" method="POST">
                @Html.AntiForgeryToken()
                <input type="hidden" name="Id" value="@Model.Id" />

                <div class="form-floating mb-3">
                    <input asp-for="Title" class="form-control" placeholder=" " />
                    <label asp-for="Title">Project Title</label>
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <textarea asp-for="Description" class="form-control" style="height: 150px;" placeholder=" "></textarea>
                    <label asp-for="Description">Description</label>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">Participants</label>
                    <div class="participant-list" dont-add="@User.FindFirstValue(ClaimTypes.NameIdentifier)">
                        <input name="Participants" type="hidden" id="participants" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
                        <span id="none-text" style="display: @((Model.Participants == null || !Model.Participants.Any()) ? "block" : "none");">None</span>
                        @if (Model.Participants != null && Model.Participants.Any())
                        {
                            foreach (var user in Model.Participants)
                            {
                                <div class="participant-item d-flex justify-content-between align-items-center p-2 mb-2 bg-light border rounded">
                                    <span>@user.Username</span>
                                    <button type="button" class="leave-btn" data-user-id="@user.Id" onclick="removeParticipant(this)">Remove</button>
                                </div>
                            }
                        }
                    </div>
                    <span asp-validation-for="Participants" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3" style="display:flex; flex-direction:row; gap:10px">
                    <input id="newUserName" placeholder=" " class="form-control" />
                    <label>Participant Username</label>
                    <button type="button" onclick="addParticipant()">Add</button>
                    <span id="error" class="text-danger" style="display:none;"></span>
                </div>

                <div class="button-container">
                    <button type="submit">Save Changes</button>
                    <a class="btn" href="@(Model.Id == string.Empty?Url.Action("Index", "Projects", new {projectsToGet = ProjectsTab.Created}):Url.Action("Index", "Tasks", new {projectId = Model.Id}))">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>