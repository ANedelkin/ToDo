@using ToDo.Core.Models.ViewModels
@using ToDo.Constants.Enums;
@model ProjectVM

@{
    ViewData["Title"] = "Tasks";
}

@section Scripts {
<script src="~/js/project.js"></script>
}

<div class="client-area">
        <partial name="ProjectSidebar" model='new ProjectSidebarVM(Model.TasksVM.ProjectName, (int)ProjectSidebarTabs.Tasks, Model.Id!)'></partial>

    <div class="container">
        <div class="tasks-columns">

            <!-- Pending -->
            <div class="column pending" data-status="pending">
                <h2>Pending</h2>
                @if (Model.IsCreator)
                {
                    <a class="create-task-btn" data-status="pending" href="@Url.Action("Create", "Tasks", new {projectId = Model.Id, status = (int)ToDo.Constants.Enums.TaskStatus.Pending})">+ Create Task</a>
                }

                @foreach(var task in Model.TasksVM.Tasks.Where(t => t.status == ToDo.Constants.Enums.TaskStatus.Pending))
                {
                    <a href="task-wireframes.html" class="task-link" draggable="false">
                        <div class="task" draggable="true">
                            <div class="task-header">@task.title</div>
                        </div>
                    </a>
                }

                <a href="task-wireframes.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Design Wireframes</div>
                    </div>
                </a>
                <a href="task-requirements.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Gather Requirements</div>
                    </div>
                </a>
            </div>

            <!-- In Progress -->
            <div class="column inprogress" data-status="inprogress">
                <h2>In Progress</h2>
                @if (Model.IsCreator)
                {
                    <a class="create-task-btn" data-status="inprogress" href="@Url.Action("Create", "Tasks", new {projectId = Model.Id, status = (int)ToDo.Constants.Enums.TaskStatus.InProgress})">+ Create Task</a>
                }

                <a href="task-api.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Develop API</div>
                    </div>
                </a>
                <a href="task-unit-tests.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Write Unit Tests</div>
                    </div>
                </a>
            </div>

            <!-- Done -->
            <div class="column done" data-status="done">
                <h2>Done</h2>
                @if (Model.IsCreator)
                {
                    <a class="create-task-btn" data-status="done" href="@Url.Action("Create", "Tasks", new {projectId = Model.Id, status = (int)ToDo.Constants.Enums.TaskStatus.Done})">+ Create Task</a>
                }

                <a href="task-database.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Set up Database</div>
                    </div>
                </a>
                <a href="task-staging.html" class="task-link" draggable="false">
                    <div class="task" draggable="true">
                        <div class="task-header">Deploy to Staging</div>
                    </div>
                </a>
            </div>

        </div>
    </div>
</div>
